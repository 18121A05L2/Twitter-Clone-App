-> multisig wallets , counterfactual accounts , gnoysis safe , tornado cash ( exclusion list in proof of innocence )
-> privacy for the weak and transperancy for the powerful
-> Peer scoring algorithms
-> Pos is not just a block driven but also a time driven network
-> Beacon nodes ( consensus ) database was 50-Gb and the execution client has between 500-700 GB
-> We need to run separate consensus and execution clients, which has their own p2p nodes and data will come through consensus to execution through Engine API
-> Putting ur wallet ( private key ) inside the execution client for those key management APIs was dumb
-> What are archive nodes
-> 1Ether = 10^18 wei , 1Ether = 10^9 Gwei
-> The state root hash is the hash of the root node of the state trie after the execution of all the transactions included in the block.
-> When a light client needs to verify a specific part of the state (e.g., the balance of an account or the result of a transaction), it can request a Merkle proof from a full node
-> A Merkle proof is a path in the Merkle Patricia Trie from a particular leaf (the account or storage data) up to the state root hash
-> Ethereum 2.0 divides time into periods called epochs (each epoch consists of 32 slots, with each slot lasting 12 seconds) -- Assume there are 100,000 active validators. For a block to be justified, at least 66,667 validators (â…”) need to attest to it in an epoch