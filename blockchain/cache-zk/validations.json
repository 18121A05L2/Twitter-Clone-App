{
  "version": "3.4",
  "log": [
    {
      "@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol:AggregatorInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "latestTimestamp()",
          "latestRound()",
          "getAnswer(uint256)",
          "getTimestamp(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol:AggregatorV2V3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol:7",
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface",
          "@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol:AggregatorInterface"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol:MockV3Aggregator": {
        "src": "@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol:14",
        "version": {
          "withMetadata": "26b9fb9136dabff326e83d592a99b96fca92d18b18e026a4cd6ff42382818863",
          "withoutMetadata": "26b9fb9136dabff326e83d592a99b96fca92d18b18e026a4cd6ff42382818863",
          "linkedWithoutMetadata": "26b9fb9136dabff326e83d592a99b96fca92d18b18e026a4cd6ff42382818863"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol:AggregatorV2V3Interface",
          "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface",
          "@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol:AggregatorInterface"
        ],
        "libraries": [],
        "methods": [
          "(uint8,int256)",
          "updateAnswer(int256)",
          "updateRoundData(uint80,int256,uint256,uint256)",
          "getRoundData(uint80)",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockV3Aggregator",
            "src": "@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "decimals",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "MockV3Aggregator",
              "src": "@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol:17"
            },
            {
              "label": "latestAnswer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "MockV3Aggregator",
              "src": "@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol:18"
            },
            {
              "label": "latestTimestamp",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MockV3Aggregator",
              "src": "@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol:19"
            },
            {
              "label": "latestRound",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "MockV3Aggregator",
              "src": "@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol:20"
            },
            {
              "label": "getAnswer",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_int256)",
              "contract": "MockV3Aggregator",
              "src": "@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol:22"
            },
            {
              "label": "getTimestamp",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MockV3Aggregator",
              "src": "@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol:23"
            },
            {
              "label": "getStartedAt",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MockV3Aggregator",
              "src": "@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol:24"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_int256)": {
              "label": "mapping(uint256 => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "d8beec8eab49a00bbc240985417d4f2cad37934e902a3277054a76604ca6c3d8",
          "withoutMetadata": "d8beec8eab49a00bbc240985417d4f2cad37934e902a3277054a76604ca6c3d8",
          "linkedWithoutMetadata": "d8beec8eab49a00bbc240985417d4f2cad37934e902a3277054a76604ca6c3d8"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:26"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:14",
        "version": {
          "withMetadata": "bf18da91e68b8a896079f47bcffd256a64b4be61a0535320dd9676a16b9c9190",
          "withoutMetadata": "bf18da91e68b8a896079f47bcffd256a64b4be61a0535320dd9676a16b9c9190",
          "linkedWithoutMetadata": "bf18da91e68b8a896079f47bcffd256a64b4be61a0535320dd9676a16b9c9190"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:23",
        "version": {
          "withMetadata": "7acd592fc4f4e2aa59c5fb02fd123025284764b318c4a69212d7c4a9fafa00ff",
          "withoutMetadata": "7acd592fc4f4e2aa59c5fb02fd123025284764b318c4a69212d7c4a9fafa00ff",
          "linkedWithoutMetadata": "7acd592fc4f4e2aa59c5fb02fd123025284764b318c4a69212d7c4a9fafa00ff"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:39"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_beacon",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:25"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:15",
        "version": {
          "withMetadata": "2f9274448e214a421298bdff8d6f01474386ea26d138805e317063059c6d1a6e",
          "withoutMetadata": "2f9274448e214a421298bdff8d6f01474386ea26d138805e317063059c6d1a6e",
          "linkedWithoutMetadata": "2f9274448e214a421298bdff8d6f01474386ea26d138805e317063059c6d1a6e"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "0833882ca356b39b72e924a0fb1a6e5382a54d0275b98fd4a3c1609d5d9c82ac",
          "withoutMetadata": "0833882ca356b39b72e924a0fb1a6e5382a54d0275b98fd4a3c1609d5d9c82ac",
          "linkedWithoutMetadata": "0833882ca356b39b72e924a0fb1a6e5382a54d0275b98fd4a3c1609d5d9c82ac"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ProxyAdmin",
            "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:17",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:60",
        "version": {
          "withMetadata": "bf22ede2584e7ca131c24919dd0e66856b0c0992b1fde3122ab7049845be8a10",
          "withoutMetadata": "bf22ede2584e7ca131c24919dd0e66856b0c0992b1fde3122ab7049845be8a10",
          "linkedWithoutMetadata": "bf22ede2584e7ca131c24919dd0e66856b0c0992b1fde3122ab7049845be8a10"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:77"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_admin",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:65"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "0583c8d4643975e2374d97921dcade474117dd269084aa769210a9df1a5abbbd",
          "withoutMetadata": "0583c8d4643975e2374d97921dcade474117dd269084aa769210a9df1a5abbbd",
          "linkedWithoutMetadata": "0583c8d4643975e2374d97921dcade474117dd269084aa769210a9df1a5abbbd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "f2b14ada12242d9670f014704d4a731bad19c4a0e8c622b85ac083d306c9d85e",
          "withoutMetadata": "f2b14ada12242d9670f014704d4a731bad19c4a0e8c622b85ac083d306c9d85e",
          "linkedWithoutMetadata": "f2b14ada12242d9670f014704d4a731bad19c4a0e8c622b85ac083d306c9d85e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/FundMe.sol:FundMe": {
        "src": "contracts/FundMe.sol:8",
        "version": {
          "withMetadata": "7af598920d32cfd8903aed81b072b4c39c4d60626aed35efb9ddb1b251e0ebc6",
          "withoutMetadata": "7af598920d32cfd8903aed81b072b4c39c4d60626aed35efb9ddb1b251e0ebc6",
          "linkedWithoutMetadata": "7af598920d32cfd8903aed81b072b4c39c4d60626aed35efb9ddb1b251e0ebc6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/Twitter.sol:Twitter": {
        "src": "contracts/Twitter.sol:17",
        "version": {
          "withMetadata": "f5e06ee4d81550bb8874da8f0ffacafc3ce6658f993e16c9391a0454be8142dc",
          "withoutMetadata": "f5e06ee4d81550bb8874da8f0ffacafc3ce6658f993e16c9391a0454be8142dc",
          "linkedWithoutMetadata": "f5e06ee4d81550bb8874da8f0ffacafc3ce6658f993e16c9391a0454be8142dc"
        },
        "inherit": [
          "contracts/TwitterToken.sol:TwitterToken"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setNftContractAddress(address)",
          "tweet(string)",
          "getOwner()",
          "retriveTweets(address)",
          "withdraw()",
          "fund()",
          "getAllFunders()",
          "faucet()",
          "freeEth(uint256)",
          "setProfile(string,uint256)",
          "setProfileAtMint(string,address)",
          "getProfile(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Twitter",
            "src": "contracts/Twitter.sol:39"
          },
          {
            "kind": "state-variable-immutable",
            "name": "i_owner",
            "src": "contracts/Twitter.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "TwitterToken",
              "src": "contracts/TwitterToken.sol:11"
            },
            {
              "label": "s_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "TwitterToken",
              "src": "contracts/TwitterToken.sol:12"
            },
            {
              "label": "s_decimals",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "TwitterToken",
              "src": "contracts/TwitterToken.sol:13"
            },
            {
              "label": "s_balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TwitterToken",
              "src": "contracts/TwitterToken.sol:14"
            },
            {
              "label": "s_allowances",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TwitterToken",
              "src": "contracts/TwitterToken.sol:15"
            },
            {
              "label": "contractAddress",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Twitter",
              "src": "contracts/Twitter.sol:18"
            },
            {
              "label": "s_priceFeed",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(AggregatorV3Interface)102",
              "contract": "Twitter",
              "src": "contracts/Twitter.sol:22"
            },
            {
              "label": "s_funders",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Twitter",
              "src": "contracts/Twitter.sol:23"
            },
            {
              "label": "s_addressToAmountFunded",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Twitter",
              "src": "contracts/Twitter.sol:24"
            },
            {
              "label": "s_addressToTweets",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)",
              "contract": "Twitter",
              "src": "contracts/Twitter.sol:25"
            },
            {
              "label": "profiles",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_string_storage)",
              "contract": "Twitter",
              "src": "contracts/Twitter.sol:29"
            },
            {
              "label": "nftContract",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(TwitterNfts)3069",
              "contract": "Twitter",
              "src": "contracts/Twitter.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)102": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(TwitterNfts)3069": {
              "label": "contract TwitterNfts",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
              "label": "mapping(address => string[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/TwitterNfts.sol:TwitterNfts": {
        "src": "contracts/TwitterNfts.sol:8",
        "version": {
          "withMetadata": "5fba65ed3c8a911fcdf1882fe52619fc141f27bd84f1894bd646698ab9cebb8e",
          "withoutMetadata": "5fba65ed3c8a911fcdf1882fe52619fc141f27bd84f1894bd646698ab9cebb8e",
          "linkedWithoutMetadata": "5fba65ed3c8a911fcdf1882fe52619fc141f27bd84f1894bd646698ab9cebb8e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(string,string)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "transferFrom(address,address,uint256)",
          "approveNft(address,uint256)",
          "revertApproval(uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)",
          "mintTo(string,string)",
          "tokenURI(uint256)",
          "totalSupply()",
          "getMyNfts()",
          "getNftSymbol()",
          "listNFT(uint256,uint256)",
          "buyNFT(uint256,uint256)",
          "cancelNFT(uint256)",
          "getListedNFT(uint256)",
          "getAllListedNfts()",
          "setTwitterContractAddress(address payable)",
          "burnNft(uint256)",
          "getOwner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TwitterNfts",
            "src": "contracts/TwitterNfts.sol:85"
          },
          {
            "kind": "state-variable-immutable",
            "name": "i_owner",
            "src": "contracts/TwitterNfts.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "contracts/TwitterNfts.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "TwitterNfts",
              "src": "contracts/TwitterNfts.sol:9"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "TwitterNfts",
              "src": "contracts/TwitterNfts.sol:10"
            },
            {
              "label": "twitterContract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(Twitter)2043",
              "contract": "TwitterNfts",
              "src": "contracts/TwitterNfts.sol:11"
            },
            {
              "label": "nextTokenIdToMint",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "TwitterNfts",
              "src": "contracts/TwitterNfts.sol:14"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "TwitterNfts",
              "src": "contracts/TwitterNfts.sol:17"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TwitterNfts",
              "src": "contracts/TwitterNfts.sol:19"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "TwitterNfts",
              "src": "contracts/TwitterNfts.sol:21"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "TwitterNfts",
              "src": "contracts/TwitterNfts.sol:23"
            },
            {
              "label": "_tokenUris",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "TwitterNfts",
              "src": "contracts/TwitterNfts.sol:25"
            },
            {
              "label": "listedNfts",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(NFT)2134_storage)",
              "contract": "TwitterNfts",
              "src": "contracts/TwitterNfts.sol:65"
            },
            {
              "label": "locked",
              "offset": 0,
              "slot": "10",
              "type": "t_bool",
              "contract": "TwitterNfts",
              "src": "contracts/TwitterNfts.sol:66"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(Twitter)2043": {
              "label": "contract Twitter",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(NFT)2134_storage)": {
              "label": "mapping(uint256 => struct TwitterNfts.NFT)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(NFT)2134_storage": {
              "label": "struct TwitterNfts.NFT",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "sold",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/TwitterToken.sol:TwitterToken": {
        "src": "contracts/TwitterToken.sol:9",
        "version": {
          "withMetadata": "4a40ac58ff04e3a8e84be13446e97537bbfe56ce174e24f50acd6f2ab965355b",
          "withoutMetadata": "4a40ac58ff04e3a8e84be13446e97537bbfe56ce174e24f50acd6f2ab965355b",
          "linkedWithoutMetadata": "4a40ac58ff04e3a8e84be13446e97537bbfe56ce174e24f50acd6f2ab965355b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "approveTokensForNftContract(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TwitterToken",
            "src": "contracts/TwitterToken.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "s_name",
            "src": "contracts/TwitterToken.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "s_symbol",
            "src": "contracts/TwitterToken.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "s_decimals",
            "src": "contracts/TwitterToken.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "TwitterToken",
              "src": "contracts/TwitterToken.sol:11"
            },
            {
              "label": "s_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "TwitterToken",
              "src": "contracts/TwitterToken.sol:12"
            },
            {
              "label": "s_decimals",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "TwitterToken",
              "src": "contracts/TwitterToken.sol:13"
            },
            {
              "label": "s_balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TwitterToken",
              "src": "contracts/TwitterToken.sol:14"
            },
            {
              "label": "s_allowances",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TwitterToken",
              "src": "contracts/TwitterToken.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/interfaces/IERC721Receiver.sol:IERC721Receiver": {
        "src": "contracts/interfaces/IERC721Receiver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "f7e63a692b24ee6a696c7e3786910a3e1592758320a6ba2756af8dad9b755417",
          "withoutMetadata": "f7e63a692b24ee6a696c7e3786910a3e1592758320a6ba2756af8dad9b755417",
          "linkedWithoutMetadata": "f7e63a692b24ee6a696c7e3786910a3e1592758320a6ba2756af8dad9b755417"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      }
    }
  ]
}